// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wanta-zulfikri/Event-Planning-App/app/features/users (interfaces: Handler)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// DeleteProfile mocks base method.
func (m *MockHandler) DeleteProfile() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteProfile")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// DeleteProfile indicates an expected call of DeleteProfile.
func (mr *MockHandlerMockRecorder) DeleteProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteProfile", reflect.TypeOf((*MockHandler)(nil).DeleteProfile))
}

// GetProfile mocks base method.
func (m *MockHandler) GetProfile() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProfile")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// GetProfile indicates an expected call of GetProfile.
func (mr *MockHandlerMockRecorder) GetProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProfile", reflect.TypeOf((*MockHandler)(nil).GetProfile))
}

// Login mocks base method.
func (m *MockHandler) Login() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// Login indicates an expected call of Login.
func (mr *MockHandlerMockRecorder) Login() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockHandler)(nil).Login))
}

// Register mocks base method.
func (m *MockHandler) Register() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockHandlerMockRecorder) Register() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockHandler)(nil).Register))
}

// UpdateProfile mocks base method.
func (m *MockHandler) UpdateProfile() echo.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile")
	ret0, _ := ret[0].(echo.HandlerFunc)
	return ret0
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockHandlerMockRecorder) UpdateProfile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockHandler)(nil).UpdateProfile))
}
